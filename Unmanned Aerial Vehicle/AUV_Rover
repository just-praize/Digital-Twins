import random

class UAV:
    def __init__(self, uav_id, location=(0, 0), altitude=0, speed=0, fuel_level=100):
        self.uav_id = uav_id
        self.location = location
        self.altitude = altitude
        self.speed = speed
        self.fuel_level = fuel_level
        self.status = "On Ground"
    
    def takeoff(self):
        if self.fuel_level > 10:
            self.altitude = 100
            self.status = "In Air"
            print(f"UAV {self.uav_id} has taken off. Altitude: {self.altitude}m")
        else:
            print(f"UAV {self.uav_id} cannot take off due to low fuel.")

    def land(self):
        self.altitude = 0
        self.status = "On Ground"
        print(f"UAV {self.uav_id} has landed.")

    def move_to(self, new_location):
        if self.status != "In Air":
            print(f"UAV {self.uav_id} cannot move. It's not in the air.")
            return
        self.location = new_location
        self.fuel_level -= random.uniform(5, 15)
        print(f"UAV {self.uav_id} moved to location {self.location}. Remaining fuel: {self.fuel_level:.2f}%")

    def conduct_surveillance(self):
        if self.status != "In Air":
            print(f"UAV {self.uav_id} cannot conduct surveillance while on the ground.")
            return
        print(f"UAV {self.uav_id} is conducting surveillance at {self.location} and {self.altitude}m altitude.")

    def status_report(self):
        print(f"[STATUS] ID: {self.uav_id} | Location: {self.location} | Altitude: {self.altitude}m | Speed: {self.speed}km/h | Fuel: {self.fuel_level:.2f}% | Status: {self.status}")


class Sensors:
    def __init__(self):
        self.camera = True
        self.radar = True
        self.gps = True

    def collect_camera_data(self):
        return f"Image captured at resolution {random.choice(['1080p', '4K'])}"

    def collect_radar_data(self):
        detected_objects = random.randint(0, 5)
        return f"Radar detected {detected_objects} objects in range"

    def get_gps_coordinates(self, location):
        lat = location[0] + random.uniform(-0.001, 0.001)
        lon = location[1] + random.uniform(-0.001, 0.001)
        return f"GPS Coordinates: ({lat:.4f}, {lon:.4f})"


class CommunicationSystem:
    def __init__(self):
        self.message_log = []

    def send_message(self, message):
        self.message_log.append(f"Sent: {message}")
        print(f"[COMM] Message sent: {message}")

    def receive_message(self):
        message = f"Command received at {random.randint(10, 99)}s"
        self.message_log.append(f"Received: {message}")
        print(f"[COMM] Message received: {message}")
        return message


uav = UAV(uav_id="Air Ghost-0069")
sensors = Sensors()
comm = CommunicationSystem()

uav.status_report()
uav.takeoff()
uav.move_to((10, 20))
uav.conduct_surveillance()

print(sensors.collect_camera_data())
print(sensors.collect_radar_data())
print(sensors.get_gps_coordinates(uav.location))

comm.send_message("Start surveillance at grid 10x20")
comm.receive_message()

uav.land()
uav.status_report()
